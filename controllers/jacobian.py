import numpy as np
from sympy import *
import math 


MAX_STEP = 10



class JacobianController:
    def __init__(self, arm):
        # the controller should save a reference to the arm it's controlling
        self.arm = arm

    def control(self, target):
        if self.arm.get_num_joints() == 2:
            # if arm has 2 joints            
            self.control2J2D(target)
        elif self.arm.get_num_joints() == 3:
            # if arm has 3 joints
            self.control3J2D(target)
        elif self.arm.get_num_joints() == 6:
            # if arm has 6 joints
            self.control6J2D(target)
        else:
            raise Exception("JacobianController.control(target): Can't control an arm with this amount joints.")

    def control2J2D(self, target):
        # the control method receives a target
        curr_end  = self.arm.endeffector()
        delta_pos = target - curr_end
        # we limit the size of the delta_pos vector as MAX_STEP
        # to avoid making large steps
        if delta_pos.r > MAX_STEP:
            delta_pos.r = MAX_STEP

        theta1 = self.arm.thetas[0]
        theta2 = self.arm.thetas[1]

        l1 = self.arm.lengths[0]
        l2 = self.arm.lengths[1]

        a_0_0 = -l1*np.sin(theta1) - l2*np.sin(theta1)*np.cos(theta2) - l2*np.sin(theta2)*np.cos(theta1)
        a_1_0 =  l1*np.cos(theta1) - l2*np.sin(theta1)*np.sin(theta2) + l2*np.cos(theta1)*np.cos(theta2)
        a_0_1 = -l2*np.sin(theta1)*np.cos(theta2) - l2*np.sin(theta2)*np.cos(theta1)
        a_1_1 = -l2*np.sin(theta1)*np.sin(theta2) + l2*np.cos(theta1)*np.cos(theta2)

        J = np.array([[a_0_0, a_0_1], [a_1_0, a_1_1]])

        iJ = np.linalg.inv(J)

        # the dot product between iJ and the desired displacement
        # in the end-effector gives us the change necessary in joint values
        delta_joints = iJ.dot(np.array([delta_pos.x, delta_pos.y]))

        # with delta_joints in hand, we move the arm
        self.arm.move( delta_joints )
        pass

#==================================================================================================
    
    def control3J2D(self, target):

        pass

#==================================================================================================


    def control6J2D(self, target):
        # the control method receives a target
        curr_end = self.arm.endeffector()
        delta_pos = target - curr_end
        # we limit the size of the delta_pos vector as MAX_STEP
        # to avoid making large steps
        if delta_pos.r > MAX_STEP:
            delta_pos.r = MAX_STEP

        # # calculate the inverse Jacobian matrix
        # iJ = 1/(self.arm.lengths[0]*self.arm.lengths[1]*np.sin(self.arm.thetas[1])) * np.array([
        # [self.arm.lengths[1]*np.cos(self.arm.thetas[0] + self.arm.thetas[1]),
        #  self.arm.lengths[1]*np.sin(self.arm.thetas[0] + self.arm.thetas[1])],
        # [-self.arm.lengths[0]*np.cos(self.arm.thetas[0])-self.arm.lengths[1]*np.cos(self.arm.thetas[0]+self.arm.thetas[1]),
        #  -self.arm.lengths[0]*np.sin(self.arm.thetas[0])-self.arm.lengths[1]*np.sin(self.arm.thetas[0]+self.arm.thetas[1])]
        # ])

        theta1 = self.arm.thetas[0]
        theta2 = self.arm.thetas[1]
        theta3 = self.arm.thetas[2]
        theta4 = self.arm.thetas[3]
        theta5 = self.arm.thetas[4]
        theta6 = self.arm.thetas[5]

        l1 = self.arm.lengths[0]
        l2 = self.arm.lengths[1]
        l3 = self.arm.lengths[2]
        l4 = self.arm.lengths[3]
        l5 = self.arm.lengths[4]
        l6 = self.arm.lengths[5]


        a00 = -l1*np.sin(theta1) - l2*np.sin(theta1)*np.cos(theta2) - l2*np.sin(theta2)*np.cos(theta1) + l3*(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + l3*(-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + l5*((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + l5*(((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + l6*(((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + (((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) + l6*(((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + (-((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        a01 = -l2*np.sin(theta1)*np.cos(theta2) - l2*np.sin(theta2)*np.cos(theta1) + l3*(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + l3*(-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + l5*((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + l5*(((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + l6*(((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + (((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) + l6*(((-(np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + (-((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        a02 = -l3*(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + l3*(-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3) + l4*(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + l5*(((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + l6*((-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5))*np.sin(theta6) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5))*np.cos(theta6)
        a03 = l4*(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + l5*(-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + l6*((-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) + l6*((-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + (-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        a04 = -l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + l6*((-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) - ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6) + l6*(-((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6)
        a05 = l6*(-((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) - l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        
        a10 = l1*np.cos(theta1) - l2*np.sin(theta1)*np.sin(theta2) + l2*np.cos(theta1)*np.cos(theta2) + l3*(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + l3*(-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3) + l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.sin(theta5) + l5*(((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.cos(theta5) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.sin(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.cos(theta5) + (-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) - ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        a11 = -l2*np.sin(theta1)*np.sin(theta2) + l2*np.cos(theta1)*np.cos(theta2) + l3*(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + l3*(-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3) + l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + l4*((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.sin(theta5) + l5*(((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.cos(theta5) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.sin(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.cos(theta5))*np.cos(theta6) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4) + ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4))*np.cos(theta5) + (-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) - ((np.sin(theta1)*np.sin(theta2) - np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4))*np.sin(theta5))*np.sin(theta6)
        a12 = l3*(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - l3*(np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3) + l4*(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5) + l6*((-(-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.sin(theta6) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + ((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (-np.sin(theta1)*np.cos(theta2) - np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + (-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.cos(theta6)
        a13 = -l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + l4*((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4) + l5*((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5) + l5*(-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5) + (-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5))*np.cos(theta6) + l6*(((-(-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5))*np.sin(theta6)
        a14 = l5*(-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) - l5*(((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5) + l6*(-(-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + (-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) - ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.sin(theta6) + l6*((-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) - (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.cos(theta6)
        a15 = -l6*((-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.sin(theta5) + (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.cos(theta5))*np.sin(theta6) + l6*((-((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.sin(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.cos(theta4))*np.cos(theta5) - (((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.sin(theta3) + (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.cos(theta3))*np.cos(theta4) + ((-np.sin(theta1)*np.sin(theta2) + np.cos(theta1)*np.cos(theta2))*np.cos(theta3) - (np.sin(theta1)*np.cos(theta2) + np.sin(theta2)*np.cos(theta1))*np.sin(theta3))*np.sin(theta4))*np.sin(theta5))*np.cos(theta6)

        J = np.array([[a00, a01, a02, a03, a04, a05],[a10, a11, a12, a13, a14, a15]])
        iJ = np.linalg.pinv(J)

        # the dot product between iJ and the desired displacement
        # in the end-effector gives us the change necessary in joint values
        delta_joints = iJ.dot(np.array([delta_pos.x, delta_pos.y]))

        # with delta_joints in hand, we move the arm
        self.arm.move(delta_joints)
        pass